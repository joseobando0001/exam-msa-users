import org.openapitools.generator.gradle.plugin.tasks.GenerateTask
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version "7.12.0"
}

group = 'com.pichincha.exam'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'io.r2dbc:r2dbc-h2:1.0.0.RELEASE'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('buildSpringContract', GenerateTask) {
	generatorName = "spring"
	inputSpec = "$projectDir/src/main/resources/openapi.yaml"
	outputDir = "$buildDir/generated"
	apiPackage = "com.pichincha.exam.api"
	invokerPackage = "com.pichincha.exam"
	modelPackage = "com.pichincha.exam.models"
	configOptions = [
			dateLibrary: "java8",
			interfaceOnly: "true",
			reactive: "true"
	]
}

compileJava{
	dependsOn buildSpringContract
}



dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
